service: snack-nest
frameworkVersion: "4.18.0"

provider:
  name: aws
  runtime: nodejs20.x
  region: ap-northeast-2
  memorySize: 512
  timeout: 15
  stage: prod
  environment:
    NODE_ENV: production
    SERVER_AWS_REGION: ap-northeast-2
    S3_BUCKET: 100-snack-dict-s3
    S3_PREFIX: snacks/
    PRESIGN_EXPIRES: '300'
    URL: "postgresql://neondb_owner:npg_QbSCuTYM53GO@ep-floral-snowflake-aerng1th-pooler.c-2.us-east-2.aws.neon.tech/neondb?sslmode=require&channel_binding=require"
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - s3:PutObject
            - s3:GetObject
          Resource: arn:aws:s3:::100-snack-dict-s3/snacks/*
custom:
  serverless-offline:
    httpPort: 4000
    lambdaPort: 4002

functions:
  api:
    handler: "src/lambda/lambda.handler"
    events:
      - httpApi: # HTTP API(권장). REST로 할거면 "http:"로 변경
          method: ANY
          path: /{proxy+}

build:
  esbuild:
    bundle: true
    format: cjs
    target: node20
    minify: true          # ⬅️ 잠깐 끄고
    sourcemap: true        # ⬅️ 켜서 라인 확인
    keepNames: true        # ⬅️ 함수/클래스 이름 유지
    external:
      # Nest optional packages (전부 번들 제외)
      - '@nestjs/microservices'
      - '@nestjs/microservices/*'
      - '@nestjs/websockets'
      - '@nestjs/websockets/*'
      - '@nestjs/platform-socket.io'

      # microservices가 require하는 트랜스포트 클라이언트들
      - kafkajs
      - mqtt
      - ioredis
      - amqplib
      - amqp-connection-manager
      - nats
      - '@grpc/grpc-js'
      - '@grpc/proto-loader'

plugins:
  - serverless-offline

  
package:
  patterns:
    - package.json
    - pnpm-lock.yaml
    - '!node_modules/**'
    - '!dist/**'
    - '!src/**'
    - '!test/**'
